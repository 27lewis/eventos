-- MySQL Script generated by MySQL Workbench
-- Tue Jul 29 14:59:26 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `Clientes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Clientes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombres` VARCHAR(30) NOT NULL,
  `apellidos` VARCHAR(30) NOT NULL,
  `direccion` VARCHAR(50) NOT NULL,
  `telefono` VARCHAR(20) NOT NULL,
  `correo` VARCHAR(70) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Metodospagos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Metodospagos` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Autores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Autores` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombres` VARCHAR(40) NOT NULL,
  `apellidos` VARCHAR(30) NOT NULL,
  `direccion` VARCHAR(50) NOT NULL,
  `telefono` VARCHAR(20) NOT NULL,
  `correo` VARCHAR(70) NOT NULL,
  `salario` DOUBLE NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Actividades`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Actividades` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(100) NOT NULL,
  `duración` INT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Categorias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Categorias` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(40) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Eventos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Eventos` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(50) NOT NULL,
  `descripcion` VARCHAR(100) NOT NULL,
  `fechaInicio` DATE NOT NULL,
  `fechaFinal` DATE NOT NULL,
  `lugar` VARCHAR(50) NOT NULL,
  `capacidad` INT NOT NULL,
  `valor` DOUBLE NOT NULL,
  `Categorias_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Eventos_Categorias_idx` (`Categorias_id` ASC) ,
  CONSTRAINT `fk_Eventos_Categorias`
    FOREIGN KEY (`Categorias_id`)
    REFERENCES `Categorias` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Programaciones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Programaciones` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(50) NOT NULL,
  `duración` INT NOT NULL,
  `capacidad` INT NOT NULL,
  `valor` DOUBLE NOT NULL,
  `Autores_id` INT NOT NULL,
  `Actividades_id` INT NOT NULL,
  `Eventos_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Programaciones_Autores1_idx` (`Autores_id` ASC) ,
  INDEX `fk_Programaciones_Actividades1_idx` (`Actividades_id` ASC) ,
  INDEX `fk_Programaciones_Eventos1_idx` (`Eventos_id` ASC) ,
  CONSTRAINT `fk_Programaciones_Autores1`
    FOREIGN KEY (`Autores_id`)
    REFERENCES `Autores` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Programaciones_Actividades1`
    FOREIGN KEY (`Actividades_id`)
    REFERENCES `Actividades` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Programaciones_Eventos1`
    FOREIGN KEY (`Eventos_id`)
    REFERENCES `Eventos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Pagos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Pagos` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `fecha` DATE NOT NULL,
  `valor` DOUBLE NOT NULL,
  `observacion` VARCHAR(100) NOT NULL,
  `Clientes_id` INT NOT NULL,
  `Metodospagos_id` INT NOT NULL,
  `Eventos_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Pagos_Clientes1_idx` (`Clientes_id` ASC) ,
  INDEX `fk_Pagos_Metodospagos1_idx` (`Metodospagos_id` ASC) ,
  INDEX `fk_Pagos_Eventos1_idx` (`Eventos_id` ASC) ,
  CONSTRAINT `fk_Pagos_Clientes1`
    FOREIGN KEY (`Clientes_id`)
    REFERENCES `Clientes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pagos_Metodospagos1`
    FOREIGN KEY (`Metodospagos_id`)
    REFERENCES `Metodospagos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pagos_Eventos1`
    FOREIGN KEY (`Eventos_id`)
    REFERENCES `Eventos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `Metodospagos`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `Metodospagos` (`id`, `nombre`) VALUES (1, 'Efectivo');
INSERT INTO `Metodospagos` (`id`, `nombre`) VALUES (2, 'Tarjeta Debito Visa');
INSERT INTO `Metodospagos` (`id`, `nombre`) VALUES (3, 'Tarjeta Credito');
INSERT INTO `Metodospagos` (`id`, `nombre`) VALUES (4, 'Transferencia');

COMMIT;


-- -----------------------------------------------------
-- Data for table `Categorias`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `Categorias` (`id`, `nombre`) VALUES (1, 'Congreso');
INSERT INTO `Categorias` (`id`, `nombre`) VALUES (2, 'Deportivo');
INSERT INTO `Categorias` (`id`, `nombre`) VALUES (3, 'Concierto');
INSERT INTO `Categorias` (`id`, `nombre`) VALUES (4, 'Social');

COMMIT;

